/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IIsmpModuleAbi,
  IIsmpModuleAbiInterface,
} from "../../IIsmpModule.sol/IIsmpModuleAbi";

const _abi = [
  {
    type: "function",
    name: "onAccept",
    inputs: [
      {
        name: "incoming",
        type: "tuple",
        internalType: "struct IncomingPostRequest",
        components: [
          {
            name: "request",
            type: "tuple",
            internalType: "struct PostRequest",
            components: [
              {
                name: "source",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "dest",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "nonce",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "from",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "to",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "timeoutTimestamp",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "body",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onGetResponse",
    inputs: [
      {
        name: "incoming",
        type: "tuple",
        internalType: "struct IncomingGetResponse",
        components: [
          {
            name: "response",
            type: "tuple",
            internalType: "struct GetResponse",
            components: [
              {
                name: "request",
                type: "tuple",
                internalType: "struct GetRequest",
                components: [
                  {
                    name: "source",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "dest",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "nonce",
                    type: "uint64",
                    internalType: "uint64",
                  },
                  {
                    name: "from",
                    type: "address",
                    internalType: "address",
                  },
                  {
                    name: "timeoutTimestamp",
                    type: "uint64",
                    internalType: "uint64",
                  },
                  {
                    name: "keys",
                    type: "bytes[]",
                    internalType: "bytes[]",
                  },
                  {
                    name: "height",
                    type: "uint64",
                    internalType: "uint64",
                  },
                ],
              },
              {
                name: "values",
                type: "tuple[]",
                internalType: "struct StorageValue[]",
                components: [
                  {
                    name: "key",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "value",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
            ],
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onGetTimeout",
    inputs: [
      {
        name: "request",
        type: "tuple",
        internalType: "struct GetRequest",
        components: [
          {
            name: "source",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "dest",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "nonce",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "from",
            type: "address",
            internalType: "address",
          },
          {
            name: "timeoutTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "keys",
            type: "bytes[]",
            internalType: "bytes[]",
          },
          {
            name: "height",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onPostRequestTimeout",
    inputs: [
      {
        name: "request",
        type: "tuple",
        internalType: "struct PostRequest",
        components: [
          {
            name: "source",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "dest",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "nonce",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "from",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "to",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "timeoutTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "body",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onPostResponse",
    inputs: [
      {
        name: "incoming",
        type: "tuple",
        internalType: "struct IncomingPostResponse",
        components: [
          {
            name: "response",
            type: "tuple",
            internalType: "struct PostResponse",
            components: [
              {
                name: "request",
                type: "tuple",
                internalType: "struct PostRequest",
                components: [
                  {
                    name: "source",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "dest",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "nonce",
                    type: "uint64",
                    internalType: "uint64",
                  },
                  {
                    name: "from",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "to",
                    type: "bytes",
                    internalType: "bytes",
                  },
                  {
                    name: "timeoutTimestamp",
                    type: "uint64",
                    internalType: "uint64",
                  },
                  {
                    name: "body",
                    type: "bytes",
                    internalType: "bytes",
                  },
                ],
              },
              {
                name: "response",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "timeoutTimestamp",
                type: "uint64",
                internalType: "uint64",
              },
            ],
          },
          {
            name: "relayer",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onPostResponseTimeout",
    inputs: [
      {
        name: "request",
        type: "tuple",
        internalType: "struct PostResponse",
        components: [
          {
            name: "request",
            type: "tuple",
            internalType: "struct PostRequest",
            components: [
              {
                name: "source",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "dest",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "nonce",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "from",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "to",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "timeoutTimestamp",
                type: "uint64",
                internalType: "uint64",
              },
              {
                name: "body",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "response",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "timeoutTimestamp",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class IIsmpModuleAbi__factory {
  static readonly abi = _abi;
  static createInterface(): IIsmpModuleAbiInterface {
    return new utils.Interface(_abi) as IIsmpModuleAbiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IIsmpModuleAbi {
    return new Contract(address, _abi, signerOrProvider) as IIsmpModuleAbi;
  }
}
