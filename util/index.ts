const HYPERTENTS_CONTRACT = "0x2F54c2c475aA8f9e4E7d2Eb26FaDcaA185803199";
const TKN1_DRIP = "0x17d8cc0859fbA942A7af243c3EBB69AbBfe0a320";
const TKN1 = "0x146760fDDF18a228BB4dA1c4c63c820Dab171D03";
const TKN2 = "";

import { bscTestnet, sepolia } from "viem/chains";
import { config } from "dotenv";

const order =
  "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000001000000000000000000000000146760fddf18a228bb4da1c4c63c820dab171d03000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000146760fddf18a228bb4da1c4c63c820dab171d03000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000aa36a70000000000000000000000000000000000000000000000000000000000000001000000000000000000000000146760fddf18a228bb4da1c4c63c820dab171d03000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000aa36a7";

import HTABI from "./abi";
import TKN1ABI from "./tkn1abi";
import DRIPABI from "./faucetabi";

import { AbiCoder, ethers } from "ethers";

config();

async function main() {
  const provider = new ethers.JsonRpcProvider(sepolia.rpcUrls.default.http[0]);
  const signer = new ethers.Wallet(process.env.PRIVATE_KEY as any, provider);

  const hypertents = new ethers.Contract(HYPERTENTS_CONTRACT, HTABI, signer);

  // const token1 = new ethers.Contract(TKN1, TKN1ABI, signer);
  // token1.approve(HYPERTENTS_CONTRACT, 1000000000000000);

  const nonce = await signer.getNonce();

  const { hash } = await hypertents.initiate(
    {
      settlementContract: HYPERTENTS_CONTRACT,
      swapper: signer.address,
      nonce: nonce + 1,
      originChainId: 0,
      initiateDeadline: 0,
      fillDeadline: 0,
      orderData: order,
    },
    `0x`,
    `0x`
  );

  console.log(hash);
}

main();
