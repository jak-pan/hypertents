/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  StdStorageSafeAbi,
  StdStorageSafeAbiInterface,
} from "../../StdStorage.sol/StdStorageSafeAbi";

const _abi = [
  {
    type: "event",
    name: "SlotFound",
    inputs: [
      {
        name: "who",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "fsig",
        type: "bytes4",
        indexed: false,
        internalType: "bytes4",
      },
      {
        name: "keysHash",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "slot",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "WARNING_UninitedSlot",
    inputs: [
      {
        name: "who",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "slot",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

export class StdStorageSafeAbi__factory {
  static readonly abi = _abi;
  static createInterface(): StdStorageSafeAbiInterface {
    return new utils.Interface(_abi) as StdStorageSafeAbiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StdStorageSafeAbi {
    return new Contract(address, _abi, signerOrProvider) as StdStorageSafeAbi;
  }
}
