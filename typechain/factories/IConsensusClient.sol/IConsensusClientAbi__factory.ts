/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IConsensusClientAbi,
  IConsensusClientAbiInterface,
} from "../../IConsensusClient.sol/IConsensusClientAbi";

const _abi = [
  {
    type: "function",
    name: "verifyConsensus",
    inputs: [
      {
        name: "trustedState",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "proof",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "",
        type: "tuple",
        internalType: "struct IntermediateState",
        components: [
          {
            name: "stateMachineId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "height",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "commitment",
            type: "tuple",
            internalType: "struct StateCommitment",
            components: [
              {
                name: "timestamp",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "overlayRoot",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "stateRoot",
                type: "bytes32",
                internalType: "bytes32",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "nonpayable",
  },
] as const;

export class IConsensusClientAbi__factory {
  static readonly abi = _abi;
  static createInterface(): IConsensusClientAbiInterface {
    return new utils.Interface(_abi) as IConsensusClientAbiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IConsensusClientAbi {
    return new Contract(address, _abi, signerOrProvider) as IConsensusClientAbi;
  }
}
